# This is a basic workflow to help you get started with Actions
name: 'Linux Build'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runner-type:
        type: choice
        description: 'The type of runner to use'
        required: true
        default: 'ubuntu-22.04'
        options:
          - 'ubuntu-22.04'
          - 'debian-arm64-latest'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 20.x ]

    # The type of runner that the job will run on
    runs-on: ${{ github.event.inputs.runner-type || 'ubuntu-22.04' }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-${{ github.event.inputs.runner-type }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.event.inputs.runner-type }}-node_modules

      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl wget file libssl-dev libayatana-appindicator3-dev \
            libwebkit2gtk-4.1-dev librsvg2-dev

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust Project
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ runner.os }}-${{ github.event.inputs.runner-type }}-rust
          workspaces: src-tauri

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM Dependencies
        run: npm ci

      - name: Check lint
        run: npm run ng lint

      - name: Build the app
        run: npm run build -- --features=vendored-openssl
